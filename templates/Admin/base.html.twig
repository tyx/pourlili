{% import "Admin/_helper.html.twig" as helper %}

{% use 'Admin/_menu.html.twig' %}

<!doctype html>
<html lang="fr">
    <head>
        <meta charset="utf-8">
        <meta content="ie=edge" http-equiv="x-ua-compatible">
        <title>Pour Lili, liste de naissance de Lili Barray</title>
        <meta content="Liste de naissance de Adeline Thudo et TimothÃ©e Barray pour leur fille Lili Barray" name="description">
        <meta content="width=device-width, initial-scale=1.0" name="viewport">
        <link href="https://unpkg.com/material-components-web@latest/dist/material-components-web.min.css" rel="stylesheet">
        <script src="https://unpkg.com/material-components-web@latest/dist/material-components-web.min.js"></script>
        <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
        <link rel="stylesheet" href="/css/admin.css">
        {% if app.debug %}
            <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
        {% else %}
            <script src="https://cdn.jsdelivr.net/npm/vue"></script>
        {% endif %}

        {% block top_js %}
        {% endblock %}
    </head>
    <body class="mdc-typography">
        <header class="mdc-top-app-bar mdc-top-app-bar--dense">
            <div class="mdc-top-app-bar__row">
                <section class="mdc-top-app-bar__section mdc-top-app-bar__section--align-start">
                    <a href="/bo/listing" class="mdc-top-app-bar__title" style="color: #FFF">Pour Lili</a>
                </section>
                <section class="mdc-top-app-bar__section mdc-top-app-bar__section--align-end">
                    {% block choose_list %}
                    <div id="choose-list-area">
                        <div v-if="loading">
                            {{ helper.loader('loader-list', false, '#FFF') }}
                        </div>
                        <template
                            v-else
                        >
                            <button class="mdc-button mdc-button--unelevated" id="choose-list">
                                {% if list is defined %}{{ list.host }}{% else %}Vos listes{% endif %}
                            </button>
                            <div class="mdc-menu-surface--anchor" style="display: inline-block">
                                <div class="mdc-menu mdc-menu-surface" data-mdc-auto-init="MDCMenu" id="list-menu">
                                    <ul class="mdc-list" role="menu" aria-hidden="true" aria-orientation="vertical" tabindex="-1"
                                        v-for="list in lists"
                                    >
                                        <li class="mdc-list-item" role="menuitem">
                                            <a :href="list.url" class="mdc-list-item__text">${ list.host }</a>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </template>
                    </div>
                    {% endblock %}
                    <a class="mdc-icon-button material-icons" href="{{ path("admin_logout") }}">power_settings_new</a>
                </section>
            </div>
        </header>
        <main class="mdc-top-app-bar--fixed-adjust">
            {% if list is defined %}
                {{ block('menu') }}
            {% endif %}

            <div class="main-content block-center">
            {% block main %}
            {% endblock %}
            </div>
        </main>

        {% block end_js %}
        <script>
            new Vue({
                delimiters: ['${', '}'],
                el: '#choose-list-area' ,
                data () {
                    return {
                        lists: null,
                        loading: true,
                        errored: false
                    }
                },
                mounted () {
                    fetch('/bo/listing', {
                        method: 'GET',
                        headers: {
                            'Accept': 'application/json',
                            'Content-type': 'application/json',
                        }
                    })
                        .then(response => response.json())
                        .then(responseJson => {
                           this.lists = responseJson;
                           this.loading = false;
                        })
                        .then(e => {
                            window.mdc.autoInit();
                            const chooseList = document.getElementById("choose-list");
                            chooseList.addEventListener('click', function () {
                                const menu = document.getElementById('list-menu');
                                menu.MDCMenu.menuSurface_.open();
                            });
                        })
                        .catch(error => {
                            this.loading = false;
                            this.errored = true;
                        })
                    ;
                }
            });
            window.mdc.autoInit();
        </script>
        {% endblock %}
    </body>
</html>
